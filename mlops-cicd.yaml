name: MLOps CI/CD Pipeline function

on:
  push:
    branches:
      - function_pipeline
    workflow_dispatch:

jobs:
  deploy_furnction:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    env:
      GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
      GCP_REGION: ${{ vars.GCP_REGION }}
      GCP_SERVICE_ACCOUNT: ${{ vars.GCP_SERVICE_ACCOUNT }}
      TRAINING_IMAGE_URI: ${{ vars.TRAINING_IMAGE_URI }}
      TRAINING_SERVICE_ACCOUNT: ${{ vars.TRAINING_SERVICE_ACCOUNT }}
      GCS_DATA_PATH: ${{ vars.GCS_DATA_PATH }}
      GCS_MODEL_OUTPUT_DIR: ${{ vars.GCS_MODEL_OUTPUT_DIR }}

    steps:
      - uses: 'actions/checkout@v4'
        with:
          fetch-depth: 0

      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v2"
        with:
          token_format: "access_token"
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.GCP_SERVICE_ACCOUNT }}

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
      
      - name: "Deploy Cloud Function for Vertex AI Retraining Trigger"
        run: |

          gcloud functions deploy trigger_vertex_ai_retraining \
            --runtime python310 \
            --trigger-topic model-retrain-trigger-topic \
            --entry-point trigger_vertex_ai_retraining \
            --region=${GCP_REGION} \
            --project=${GCP_PROJECT_ID} \
            --set-env-vars \
              GCP_PROJECT_ID=${GCP_PROJECT_ID},\
              GCP_REGION=${GCP_REGION},\
              TRAINING_IMAGE_URI=${TRAINING_IMAGE_URI},\
              GCS_DATA_PATH=${GCS_DATA_PATH},\
              GCS_MODEL_OUTPUT_DIR=${GCS_MODEL_OUTPUT_DIR},\
              TRAINING_SERVICE_ACCOUNT=${TRAINING_SERVICE_ACCOUNT} \ 
            --service-account=${GCP_SERVICE_ACCOUNT}
